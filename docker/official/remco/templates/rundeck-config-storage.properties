{% set providerBase = "/rundeck/storage/provider" %}
{% set converterBase = "/rundeck/storage/converter" %}
{% set configConverterBase = "/rundeck/config/storage/converter" %}


{%- macro storage_provider(provider) %}
    {%- set index = provider | base %}
    {%- set type = getv(printf("%s/type", provider), "db") %}
{% if type == 'db' || type == 'file' %}
rundeck.storage.provider.{{index}}.type={% set type = printf("%s/type", provider) %}{{ getv(type, "db")}}
rundeck.storage.provider.{{index}}.path={% set path = printf("%s/path", provider) %}{{ getv(path, "keys")}}
{% endif %}
{% endmacro %}

{%- macro storage_converter(converter) %}
    {%- set index = converter | base %}
rundeck.storage.converter.{{index}}.type={% set type = printf("%s/type", converter) %}{{ getv(type, "jasypt-encryption") }}
rundeck.storage.converter.{{index}}.path={% set type = printf("%s/type", converter) %}{{ getv(type, "keys") }}
rundeck.storage.converter.{{index}}.config.encryptorType={% set type = printf("%s/config/encryptortype", converter) %}{{ getv(type, "custom") }}
rundeck.storage.converter.{{index}}.config.password={% set type = printf("%s/config/password", converter) %}{{ getv(type) }}
rundeck.storage.converter.{{index}}.config.algorithm={% set type = printf("%s/config/algorithm", converter) %}{{ getv(type, "PBEWITHSHA256AND128BITAES-CBC-BC") }}
rundeck.storage.converter.{{index}}.config.provider={% set type = printf("%s/config/provider", converter) %}{{ getv(type, "BC") }}
{% endmacro %}

{%- macro config_storage_converter(converter) %}
    {%- set index = converter | base %}
rundeck.config.storage.converter.{{index}}.type={% set type = printf("%s/type", converter) %}{{ getv(type, "jasypt-encryption") }}
rundeck.config.storage.converter.{{index}}.path={% set type = printf("%s/type", converter) %}{{ getv(type, "keys") }}
rundeck.config.storage.converter.{{index}}.config.encryptorType={% set type = printf("%s/config/encryptortype", converter) %}{{ getv(type, "custom") }}
rundeck.config.storage.converter.{{index}}.config.password={% set type = printf("%s/config/password", converter) %}{{ getv(type) }}
rundeck.config.storage.converter.{{index}}.config.algorithm={% set type = printf("%s/config/algorithm", converter) %}{{ getv(type, "PBEWITHSHA256AND128BITAES-CBC-BC") }}
rundeck.config.storage.converter.{{index}}.config.provider={% set type = printf("%s/config/provider", converter) %}{{ getv(type, "BC") }}
{% endmacro %}

{%- if ls(printf("%s/1", providerBase)) | length == 0 %}
rundeck.storage.provider.1.type=db
rundeck.storage.provider.1.path=keys
{% endif %}


{%- for p in lsdir(providerBase) -%}
    {% set provider = printf("%s/%s", providerBase, p) -%}
    {{ storage_provider(provider) }}
{%- endfor %}

{%- for c in lsdir(converterBase) %}
    {% set converter = printf("%s/%s", converterBase, c) -%}
    {{ storage_converter(converter) }}
{%- endfor %}

rundeck.projectsStorageType={{ getv("/rundeck/projectsstoragetype", "db") }}

{% for c in lsdir(configConverterBase) %}
    {% set converter = printf("%s/%s", configConverterBase, c) -%}
    {{ config_storage_converter(converter) }}
{%- endfor %}

