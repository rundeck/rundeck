/*
 * Copyright 2016 SimplifyOps, Inc. (http://simplifyops.com)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

buildscript {
    dependencies {
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.4'
    }

    repositories {
        jcenter()
    }
}

subprojects {
    apply plugin: 'com.jfrog.bintray'
    apply plugin: "groovy"

    repositories {
        mavenCentral()
    }

    dependencies {
        testCompile "org.codehaus.groovy:groovy-all:${groovyVersion}"
        testCompile "org.spockframework:spock-core:1.3-groovy-2.5"
    }

//    group = 'org.rundeck.storage'
    jar {
        manifest.attributes provider: 'gradle'
    }
}

project(':rundeck-storage:rundeck-storage-api') {
    bintray {
        user = findProperty("bintrayUser")
        key = findProperty("bintrayApiKey")
        publish = true
        dryRun = (findProperty('dryRun') ?: 'true').toBoolean()

        if (findProperty('bintrayUseExisting')) {
            filesSpec {
                from "$artifactDir/rundeck-storage/$project.name/build/libs"
                from "$artifactDir/rundeck-storage/$project.name/build/poms"
                into "${project.group}.${project.name}".replace('.', '/') + "/$version"
                rename { file ->
                    if (file =~ /^pom/)
                        return "$project.name-${version}.pom"
                    else
                        return file
                }
            }
        } else {
            configurations =  ['archives']
        }

        pkg {
            repo = 'maven'
            name = 'rundeck-storage-api'
            userOrg = 'rundeck'

            version {
                mavenCentralSync {
                    sync = true //[Default: true] Determines whether to sync the version to Maven Central.
                    user = findProperty('ossUserToken') //OSS user token: mandatory
                    password = findProperty('ossUserPassword') //OSS user password: mandatory
                }

                gpg {
                    sign = true //Determines whether to GPG sign the files. The default is false
                    passphrase = findProperty('signingPassword') //Optional. The passphrase for GPG signing'
                }
            }
        }
    }
}

project(':rundeck-storage:rundeck-storage-data') {
    dependencies {
        compile project(':rundeck-storage:rundeck-storage-api')
    }

    bintray {
        user = findProperty("bintrayUser")
        key = findProperty("bintrayApiKey")
        publish = true
        dryRun = (findProperty('dryRun') ?: 'true').toBoolean()

        if (findProperty('bintrayUseExisting')) {
            filesSpec {
                from "$artifactDir/rundeck-storage/$project.name/build/libs"
                from "$artifactDir/rundeck-storage/$project.name/build/poms"
                into "${project.group}.${project.name}".replace('.', '/') + "/$version"
                rename { file ->
                    if (file =~ /^pom/)
                        return "$project.name-${version}.pom"
                    else
                        return file
                }
            }
        } else {
            configurations =  ['archives']
        }

        pkg {
            repo = 'maven'
            name = 'rundeck-storage-data'
            userOrg = 'rundeck'

            version {
                mavenCentralSync {
                    sync = true //[Default: true] Determines whether to sync the version to Maven Central.
                    user = findProperty('ossUserToken') //OSS user token: mandatory
                    password = findProperty('ossUserPassword') //OSS user password: mandatory
                }

                gpg {
                    sign = true //Determines whether to GPG sign the files. The default is false
                    passphrase = findProperty('signingPassword') //Optional. The passphrase for GPG signing'
                }
            }
        }
    }
}
project(':rundeck-storage:rundeck-storage-conf') {
    dependencies {
        compile project(':rundeck-storage:rundeck-storage-data')
    }

    bintray {
        user = findProperty("bintrayUser")
        key = findProperty("bintrayApiKey")
        publish = true
        dryRun = (findProperty('dryRun') ?: 'true').toBoolean()

        if (findProperty('bintrayUseExisting')) {
            filesSpec {
                from "$artifactDir/rundeck-storage/$project.name/build/libs"
                from "$artifactDir/rundeck-storage/$project.name/build/poms"
                into "${project.group}.${project.name}".replace('.', '/') + "/$version"
                rename { file ->
                    if (file =~ /^pom/)
                        return "$project.name-${version}.pom"
                    else
                        return file
                }
            }
        } else {
            configurations =  ['archives']
        }

        pkg {
            repo = 'maven'
            name = 'rundeck-storage-conf'
            userOrg = 'rundeck'

            version {
                mavenCentralSync {
                    sync = true //[Default: true] Determines whether to sync the version to Maven Central.
                    user = findProperty('ossUserToken') //OSS user token: mandatory
                    password = findProperty('ossUserPassword') //OSS user password: mandatory
                }

                gpg {
                    sign = true //Determines whether to GPG sign the files. The default is false
                    passphrase = findProperty('signingPassword') //Optional. The passphrase for GPG signing'
                }
            }
        }
    }
}
project(':rundeck-storage:rundeck-storage-filesys') {
    dependencies {
        compile project(':rundeck-storage:rundeck-storage-data')
        compile "com.fasterxml.jackson.core:jackson-databind:${jacksonDatabindVersion}"
    }

    bintray {
        user = findProperty("bintrayUser")
        key = findProperty("bintrayApiKey")
        publish = true
        dryRun = (findProperty('dryRun') ?: 'true').toBoolean()

        if (findProperty('bintrayUseExisting')) {
            filesSpec {
                from "$artifactDir/rundeck-storage/$project.name/build/libs"
                from "$artifactDir/rundeck-storage/$project.name/build/poms"
                into "${project.group}.${project.name}".replace('.', '/') + "/$version"
                rename { file ->
                    if (file =~ /^pom/)
                        return "$project.name-${version}.pom"
                    else
                        return file
                }
            }
        } else {
            configurations =  ['archives']
        }

        pkg {
            repo = 'maven'
            name = 'rundeck-storage-filesys'
            userOrg = 'rundeck'

            version {
                mavenCentralSync {
                    sync = true //[Default: true] Determines whether to sync the version to Maven Central.
                    user = findProperty('sonatypeUsername') //OSS user token: mandatory
                    password = findProperty('sonatypePassword') //OSS user password: mandatory
                }

                gpg {
                    sign = true //Determines whether to GPG sign the files. The default is false
                    passphrase = findProperty('signingPassword') //Optional. The passphrase for GPG signing'
                }
            }
        }
    }
}
