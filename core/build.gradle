/**
 * The Rundeck Core API build file
 **/

description = 'The Rundeck Core API project'

archivesBaseName = 'rundeck-core'
defaultTasks 'clean','assemble'
ext.rundeckToolsDependencies=''
apply plugin: "groovy"

dependencies {
    compile project(":rundeck-storage:rundeck-storage-api")
    compile project(":rundeck-storage:rundeck-storage-conf")
    compile 'org.apache.ant:ant:1.8.3',
        'log4j:log4j:1.2.17',
        'commons-codec:commons-codec:1.5',
        'commons-beanutils:commons-beanutils:1.8.3',
        'commons-collections:commons-collections:3.2.1',
        'commons-logging:commons-logging:1.1.1',
        'commons-lang:commons-lang:2.6',
        'dom4j:dom4j:1.6.1',
        'commons-cli:commons-cli:1.0',
        'org.apache.ant:ant-jsch:1.8.3',
        'com.jcraft:jsch:0.1.52',
        'com.jcraft:jsch.agentproxy.jsch:0.0.9',
        'com.jcraft:jsch.agentproxy.sshagent:0.0.9',
        'com.jcraft:jsch.agentproxy.usocket-jna:0.0.9',
        'com.jcraft:jsch.agentproxy.usocket-nc:0.0.9',
        'com.jcraft:jsch.agentproxy.connector-factory:0.0.9',
        'com.jcraft:jsch.agentproxy.core:0.0.9',
        'com.fasterxml.jackson.core:jackson-databind:2.5.3',
        'com.fasterxml.jackson.core:jackson-core:2.5.3',
        'com.fasterxml.jackson.core:jackson-annotations:2.5.3',
        'org.yaml:snakeyaml:1.9',
        'xerces:xercesImpl:2.11.0',
        'xml-apis:xml-apis:1.4.01',

    compile ('jaxen:jaxen:1.1') {
        // Remove xerces apis as that should be provided by jdk
        exclude group: 'xerces', module: 'xmlParserAPIs'
//        exclude group: 'xml-apis', module: 'xml-apis'
        exclude group: 'xalan', module: 'xalan'
    }
    compile ('commons-httpclient:commons-httpclient:3.0.1') {
        exclude group:'junit', module: 'junit'
    }
    testCompile 'junit:junit:4.8.1',
        'org.mockito:mockito-all:1.8.5'

    testCompile "org.codehaus.groovy:groovy-all:2.3.7"
    testCompile "org.spockframework:spock-core:0.7-groovy-2.0"
}

def genDeps={
    ext.rundeckToolsDependencies = configurations.runtime.files.collect { "$it.name" }.join(" ")
}


jar.doFirst {
    genDeps()
    jar {
        manifest {
            attributes 'Rundeck-Tools-Dependencies': rundeckToolsDependencies
        }
    }
}
jar {
    manifest {
        attributes 'Rundeck-Version': version,
                   'Rundeck-Tools-Dependencies': project.rundeckToolsDependencies
    }
}

test{
    systemProperties 'rdeck.base': "$projectDir/build/rdeck_base"
}

task expandTemplate << {
    ant.delete(file:"$projectDir/src/main/resources/META-INF/com/dtolabs/rundeck/core/application.properties")
    copy{
        expand('version':version,'version_build':buildNum,'version_ident':version+'-'+buildNum)
        from "$projectDir/src/main/meta/com/dtolabs/rundeck/core/application.properties"
        into "$projectDir/src/main/resources/META-INF/com/dtolabs/rundeck/core/"
    }   
}

compileJava.dependsOn expandTemplate

assemble {
    doLast{
        //copy libs to a tools lib dir
        ant.mkdir(dir:"$projectDir/build/tools/lib")
        configurations.runtime.files.each { file ->
            copy{
                from file
                into "$projectDir/build/tools/lib"
            }
        }
    }
}

// make sure that we've rebuilt and assembled before install
install.dependsOn(build)
