import org.apache.tools.ant.filters.ReplaceTokens

apply plugin: 'java'
sourceCompatibility = 1.5
version = '1.3.0'
archivesBaseName = 'rundeck-core'
defaultTasks 'clean','assemble'
repositories {
    mavenCentral()
    add(new org.apache.ivy.plugins.resolver.FileSystemResolver()) {
        name = 'localdeps'
        //addIvyPattern "$projectDir/../dependencies/[organisation]/[module]-ivy-[revision].xml"
        addArtifactPattern "$projectDir/../dependencies/[module]/[ext]s/[module]-[revision](-[classifier]).[ext]"
        descriptor = 'optional'
        checkmodified = true
    }
}
dependencies {
    compile( 
        [group: 'ant', name: 'ant', version: '1.8.1',ext:'jar'],
        [group: 'ant-launcher', name: 'ant-launcher', version: '1.8.1',ext:'jar'],
        [group: 'log4j', name: 'log4j', version: '1.2.15',ext:'jar'],
        [group: 'commons-codec', name: 'commons-codec', version: '1.3',ext:'jar'],
        [group: 'commons-httpclient', name: 'commons-httpclient', version: '3.0.1',ext:'jar'],
        [group: 'commons-beanutils', name: 'commons-beanutils', version: '1.8.0',ext:'jar'],
        [group: 'commons-collections', name: 'commons-collections', version: '3.2.1',ext:'jar'],
        [group: 'commons-logging', name: 'commons-logging', version: '1.1',ext:'jar'],
        [group: 'commons-lang', name: 'commons-lang', version: '2.4',ext:'jar'],
        [group: 'xerces', name: 'xerces', version: '2.6.0',ext:'jar'],
        [group: 'xml-apis', name: 'xml-apis', version: '2.6.0',ext:'jar'],
        [group: 'dom4j', name: 'dom4j', version: '1.6.1',ext:'jar'],
        [group: 'jaxen', name: 'jaxen', version: '1.1',ext:'jar'],
        [group: 'commons-cli', name: 'commons-cli', version: '1.0',ext:'jar'],
        [group: 'ant-jsch', name: 'ant-jsch', version: '1.8.1',ext:'jar'],
        [group: 'jsch', name: 'jsch', version: '0.1.42',ext:'jar'],
        [group: 'org.yaml',name:'snakeyaml',version:'1.7']
    )
    testCompile(
        [group: 'junit', name: 'junit', version: '3.8.1',ext:'jar']
    )
}

jar {
    manifest {
        attributes 'Rundeck-Version': version,'Rundeck-Tools-Dependencies':configurations.runtime.collect { "$it.name" }.join(" ") 
    }
}
sourceSets {
    main {
        java {
            srcDir 'src/java'
        }
        resources {
            srcDirs =['src/resources','src/java']
        }
    }
    test {
        java {
            srcDir 'src/test'
        }
        resources {
            srcDirs = ['src/resources','src/test']
        }
    }
}

test{
    systemProperties 'rdeck.base': "$projectDir/build/rdeck_base"
    systemProperties 'rdeck.home': "$projectDir/build"
}

task expandTemplate << {
    ant.delete(file:"$projectDir/src/java/com/dtolabs/rundeck/core/VersionConstants.java")
    copy{
        from "$projectDir/src/java/com/dtolabs/rundeck/core/VersionConstants.java.template"
        into "$projectDir/src/java/com/dtolabs/rundeck/core/"
        rename { String fileName ->
            fileName.replace('.template', '')
        }
        filter(ReplaceTokens, tokens: ['version.number':version,'version.build':buildNum,'version.ident':version+'.'+buildNum])
    }   
}

compileJava.dependsOn expandTemplate

assemble {
    doLast{
        //copy libs to a tools lib dir
        ant.mkdir(dir:"$projectDir/build/tools/lib")
        configurations.runtime.files.each { file ->
            copy{
                from file
                into "$projectDir/build/tools/lib"
            }
        }
    }
}

uploadArchives {
    repositories {
       flatDir(dirs: file('repos'))
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '0.9-rc-3'
    jarPath = 'wrapper'
}