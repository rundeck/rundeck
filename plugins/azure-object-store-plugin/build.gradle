plugins {
    id 'groovy'
}

apply from: "../../gradle/java-version.gradle"

ext.pluginClassNames='org.rundeck.plugin.azureobjectstore.AzureObjectStorePlugin'
ext.pluginName = 'Azure Object Store Plugin'
ext.pluginDescription = 'Stores data in an Azure Storage compliant object store'

configurations{
    pluginLibs

    //declare compile to extend from pluginLibs so it inherits the dependencies
    implementation {
        extendsFrom pluginLibs
    }
}

dependencies {
    // Use the latest Groovy version for building this library
    implementation "org.codehaus.groovy:groovy:${groovyVersion}"

    pluginLibs (group: 'com.microsoft.azure', name: 'azure', version: '1.41.4'){
        exclude group: "com.fasterxml.jackson.core"
        exclude group: 'net.minidev', module: 'json-smart'
        exclude group: 'com.google.guava', module: 'guava'
    }
    pluginLibs (group: 'com.microsoft.azure', name: 'azure-storage', version: '8.6.6') {
        exclude group: "com.fasterxml.jackson.core"
        exclude group: 'com.google.guava', module: 'guava'
    }

    // Use the awesome Spock testing and specification framework
    testImplementation "org.spockframework:spock-core:${spockVersion}"
    testImplementation "com.squareup.okhttp3:mockwebserver:${okhttpVersion}"
    testImplementation "org.testcontainers:testcontainers:${testContainersVersion}"
    testImplementation "cglib:cglib-nodep:3.2.5"
    testImplementation 'org.objenesis:objenesis:1.4'
    testImplementation "org.slf4j:slf4j-simple:1.6.1"
    testImplementation "org.codehaus.groovy:groovy-all:${groovyVersion}"
    testImplementation "org.spockframework:spock-core:${spockVersion}"

    constraints {
        pluginLibs "com.nimbusds:nimbus-jose-jwt:${nimbusJoseVersion}"
        pluginLibs "com.squareup.okio:okio:1.17.6"
    }
}

repositories {
    mavenLocal()
    mavenCentral()
}

task copyToLib(type: Copy) {
    into "$buildDir/output/lib"
    from configurations.pluginLibs
}

tasks.withType(Test) {
    useJUnitPlatform()
}

jar {
    from "$buildDir/output"
    manifest {
        attributes 'Rundeck-Plugin-Classnames': pluginClassNames
        attributes 'Rundeck-Plugin-Name': pluginName
        attributes 'Rundeck-Plugin-Description': pluginDescription
        def libList = configurations.pluginLibs.collect { 'lib/' + it.name }.join(' ')
        attributes 'Rundeck-Plugin-Libs': "${libList}"
    }
}

//set jar task to depend on copyToLib
jar.dependsOn(copyToLib)

