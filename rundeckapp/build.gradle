buildscript {
    ext {
        bootstrapFramework = [
            version             : "3.3.5",
        //    cssPath             : "grails-app/assets/stylesheets",
        //    jsPath              : "grails-app/assets/javascripts",
        //    useIndividualJs     : false,
            useLess             : true,
        //    invalidVersionFails : false,
        //    fontAwesome : [
        //       install             : true,
        //       version             : "4.3.0",
        //       useLess             : false
        //       invalidVersionFails : false
        //    ]
        ]
    }
    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
        jcenter()
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath "gradle.plugin.com.energizedwork.webdriver-binaries:webdriver-binaries-gradle-plugin:1.1"
        classpath "gradle.plugin.com.energizedwork:idea-gradle-plugins:1.4"
        classpath "org.grails.plugins:hibernate5:${gormVersion-".RELEASE"}"
        classpath "com.bertramlabs.plugins:asset-pipeline-gradle:2.14.7"
        classpath "com.siprell.plugins:bootstrap-framework:1.0.3"
    }
}

//version "0.1"
//group "rundeckapp"

apply plugin:"eclipse"
apply plugin:"idea"
apply plugin:"war"
apply plugin:"org.grails.grails-web"
apply plugin:"com.energizedwork.webdriver-binaries"
apply plugin:"com.energizedwork.idea-project-components"
apply plugin:"asset-pipeline"
apply plugin:"org.grails.grails-gsp"
apply plugin: "com.siprell.plugins.bootstrap-framework"

configurations {
    war{}
}

repositories {
    mavenLocal()
    maven { url "https://repo.grails.org/grails/core" }
}

def springBootVersion = "1.5.8.RELEASE"

dependencies {

    // Rundeck project dependencies.
    compile project(':core')
    compile project(':rundeck-storage:rundeck-storage-filesys')
    compile project('metricsweb')

    // From BuildConfig.groovy.
    compile 'org.quartz-scheduler:quartz:2.3.0'
    compile 'org.grails.plugins:quartz:2.0.12'
    compile 'org.yaml:snakeyaml:1.14'
    compile 'com.codahale.metrics:metrics-core:3.0.2'
    compile 'com.atlassian.commonmark:commonmark:0.10.0'
    compile 'com.atlassian.commonmark:commonmark-ext-gfm-tables:0.10.0'
    compile 'com.googlecode.owasp-java-html-sanitizer:owasp-java-html-sanitizer:20171016.1'
    compile 'org.owasp.encoder:encoder:1.2.1'

    // Grails Plugins.
    //compile 'org.grails:grails-plugin-filters:3.0.17'

//    compile "org.grails:grails-test-mixins:3.3.0"
//    compile "org.grails:grails-plugin-testing:3.2.11"

    // Defined by create-app
    compile "org.grails.plugins:hibernate5:${gormVersion}"
    compile "org.hibernate:hibernate-core:5.1.0.Final"
    compile "org.hibernate:hibernate-ehcache:5.1.0.Final"
    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.grails:grails-core"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.springframework.boot:spring-boot-starter-tomcat"
    compile "org.grails:grails-web-boot"
    compile "org.grails:grails-logging"
    compile "org.grails:grails-plugin-rest"
    compile "org.grails:grails-plugin-databinding"
    compile "org.grails:grails-plugin-i18n"
    compile "org.grails:grails-plugin-services"
    compile "org.grails:grails-plugin-url-mappings"
    compile "org.grails:grails-plugin-interceptors"
    compile 'org.grails.plugins:grails-executor:0.4'
    compile "org.grails.plugins:cache"
    compile "org.grails.plugins:async"
    compile "org.grails.plugins:scaffolding"
    compile "org.grails.plugins:events"
    compile "org.grails.plugins:hibernate5"
    compile "org.hibernate:hibernate-core:5.1.5.Final"
    compile "org.grails.plugins:gsp"
//    compile 'org.codehaus.groovy:groovy-all:2.4.13'
    console "org.grails:grails-console"
    profile "org.grails.profiles:web"
//    runtime "org.springframework:spring-test:5.0.3.RELEASE"
    runtime "org.glassfish.web:el-impl:2.1.2-b03"
    runtime "com.h2database:h2:1.4.196"
    runtime "org.apache.tomcat:tomcat-jdbc"
    runtime "com.bertramlabs.plugins:asset-pipeline-grails:2.14.7"
    assets 'com.bertramlabs.plugins:less-asset-pipeline:2.14.5'
    testCompile "org.grails:grails-gorm-testing-support"
    testCompile "org.grails:grails-web-testing-support"
    testCompile "org.grails.plugins:geb"
    testCompile "org.grails:grails-test-mixins:3.3.0.RC1"
//    testCompile("org.spockframework:spock-core:1.0-groovy-2.4")
//    testCompile("org.spockframework:spock-spring:1.1-groovy-2.4-rc-2")
    testRuntime "org.seleniumhq.selenium:selenium-chrome-driver"
    testRuntime "org.seleniumhq.selenium:selenium-firefox-driver"
    testRuntime "org.seleniumhq.selenium:selenium-remote-driver"
    testRuntime "org.seleniumhq.selenium:selenium-api"
}

bootRun {
    jvmArgs('-Dspring.output.ansi.enabled=always')
    addResources = true
}

webdriverBinaries {
    chromedriver '2.32'
    geckodriver '0.18.0'
}

tasks.withType(Test) {
    systemProperty "geb.env", System.getProperty('geb.env')
    systemProperty "webdriver.chrome.driver", System.getProperty('webdriver.chrome.driver')
    systemProperty "webdriver.gecko.driver", System.getProperty('webdriver.gecko.driver')
}

assets {
    minifyJs = false
    minifyCss = true
}


artifacts {
    war war
}
