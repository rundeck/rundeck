/**
 * The Rundeck launcher app build file
 */

description = 'This is the launcher application which wraps the Jetty server'

apply plugin:'application'

mainClassName = 'com.dtolabs.rundeck.ExpandRunServer'

archivesBaseName = 'rundeck-launcher'
defaultTasks 'clean','launcherJar'
ext.launcherMainClass = mainClassName
ext.launcherStartClass = "com.dtolabs.rundeck.RunServer"
ext.launcherJettyLibs = "servlet-api-2.5-20081211.jar jetty-${jettyVersion}.jar jetty-util-${jettyVersion}.jar jetty-naming-${jettyVersion}.jar jetty-plus-${jettyVersion}.jar jna-3.2.2.jar libpam4j-1.5.jar not-yet-commons-ssl-0.3.11.jar"
ext.launcherJettyLibsUnexpanded = 'servlet-api-2.5-20081211.jar jetty-${jettyVersion}.jar jetty-util-${jettyVersion}.jar jetty-naming-${jettyVersion}.jar jetty-plus-${jettyVersion}.jar jna-3.2.2.jar libpam4j-1.5.jar not-yet-commons-ssl-0.3.11.jar'
ext.launcherJettyLibPath = "pkgs/webapp/WEB-INF/lib"

ext.launcherContentsDir = new File("$projectDir/build/launcher-contents")

eclipse.project.name = "${rootProject.eclipse.project.name}:launcher:app";

configurations{
    warBundle
    jettyServerLib
}

dependencies {
    compile project(":rundeck-launcher:rundeck-jetty-server"),
		'commons-cli:commons-cli:1.0'
	
    warBundle project(path:':rundeckapp', configuration: 'warArchives')
	

    jettyServerLib(project(path:":rundeck-launcher:rundeck-jetty-server", configuration:'runtime')) {
        exclude module:'commons-cli'
        transitive = true
    }
    jettyServerLib("org.kohsuke:libpam4j:1.5"){
        transitive = true
    }
}

task setupLauncherContent << {
    launcherContentsDir.mkdirs()
}

task expandCli(dependsOn: setupLauncherContent) << {
    //copy libs to a tools lib dir
    def dep = configurations.compile.allDependencies.find { dep -> dep.name == 'commons-cli' }
    FileTree cliJar = zipTree(configurations.compile.files(dep).find{it})
    copy{
        from cliJar
        exclude 'META-INF/**'
        into launcherContentsDir
    }
}

task expandWar(dependsOn: setupLauncherContent) << {
    //copy libs to a tools lib dir
    File webappDir=new File(launcherContentsDir,"pkgs/webapp")
    webappDir.mkdirs()
    FileTree rundeckWar = zipTree(configurations.warBundle.files.find{ file -> file})
    copy{
        from rundeckWar
        into webappDir
    }
}

task copyJettyServerLib(dependsOn: setupLauncherContent) << {
    File libDir=new File(launcherContentsDir,"lib")
    libDir.mkdirs()
    def serverlibjar = configurations.jettyServerLib.files
    copy{
        from serverlibjar
        into libDir
    }
}

jar {
    from launcherContentsDir
    from sourceSets.main.output
    exclude 'com/dtolabs/rundeck/RunServer.class'
    manifest {
        attributes 'Rundeck-Version': version, 'Main-Class':"${launcherMainClass}", "Rundeck-Start-Class":"${launcherStartClass}", "Rundeck-Jetty-Libs":"${launcherJettyLibs}", "Rundeck-Jetty-Lib-Path":"${launcherJettyLibPath}"
    }
}
jar.dependsOn(expandCli, expandWar, copyJettyServerLib)


